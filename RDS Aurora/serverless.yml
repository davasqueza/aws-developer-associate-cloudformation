service: rds-aurora

provider:
  name: aws
  runtime: nodejs16.x

resources:
  Resources:
    # ---------------------------------------
    # -----------VPC Configuration-----------
    # ---------------------------------------

    RDSVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: true
        Tags:
          - Key: Name
            Value: Database VPC

    VPCInternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: Database VPC IG

    AttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref RDSVPC
        InternetGatewayId: !Ref VPCInternetGateway

    RouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref RDSVPC
        Tags:
          - Key: Name
            Value: Database Route Table

    DefaultIpv4Route:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref RouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref VPCInternetGateway

    PublicSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref RDSVPC
        CidrBlock: 10.0.1.0/24
        MapPublicIpOnLaunch: true
        AvailabilityZone: !Select
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
        Tags:
          - Key: Name
            Value: Public Subnet 1

    PublicSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref RDSVPC
        CidrBlock: 10.0.2.0/24
        MapPublicIpOnLaunch: true
        AvailabilityZone: !Select
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
        Tags:
          - Key: Name
            Value: Public Subnet 2

    RouteTableAssociation1:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref PublicSubnet1

    RouteTableAssociation2:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref PublicSubnet2

    DatabaseSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Database SG for public access
        VpcId: !Ref RDSVPC
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            FromPort: 3306
            ToPort: 3306
            IpProtocol: tcp

    # ---------------------------------------
    # -----------RDS Configuration-----------
    # ---------------------------------------

    AuroraCluster:
      Type: AWS::RDS::DBCluster
      DependsOn: VPCInternetGateway
      Properties:
        DBClusterIdentifier: 'database-2'
        Engine: aurora-mysql
        EngineVersion: '8.0.mysql_aurora.3.04.0'
        MasterUsername: admin
        MasterUserPassword: '12345678'
        VpcSecurityGroupIds:
          - !Ref DatabaseSecurityGroup
        DatabaseName: mydb
        DBSubnetGroupName: !Ref DatabaseSubnetGroup
        BacktrackWindow: 0

    RDSDBInstance1:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceIdentifier: 'database-2-instance-1'
        DBClusterIdentifier:
          Ref: AuroraCluster
        Engine: aurora-mysql
        EngineVersion: '8.0.mysql_aurora.3.04.0'
        DBInstanceClass: 'db.t3.medium'
        PubliclyAccessible: true

    RDSDBInstance2:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceIdentifier: 'database-2-instance-2'
        DBClusterIdentifier:
          Ref: AuroraCluster
        Engine: aurora-mysql
        EngineVersion: '8.0.mysql_aurora.3.04.0'
        DBInstanceClass: 'db.t3.medium'
        PubliclyAccessible: true

    DatabaseSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: 'Subnet for Aurora-MySQL database'
        DBSubnetGroupName: 'db-subnet-group-aurora'
        SubnetIds:
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2
        Tags:
          - Key: Name
            Value: Database Subnet Group

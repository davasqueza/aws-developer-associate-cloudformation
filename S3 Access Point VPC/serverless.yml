service: s3-access-point-v2

provider:
  name: aws
  runtime: nodejs16.x

resources:
  Resources:

    # --------------------------------------
    # ----------VCP Configuration-----------
    # --------------------------------------
    EC2VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 172.31.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: true
        InstanceTenancy: default

    RouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref EC2VPC

    PrivateSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref EC2VPC
        CidrBlock: 172.31.0.0/20
        MapPublicIpOnLaunch: true

    RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref RouteTable
        SubnetId: !Ref PrivateSubnet

    S3GatewayEndpoint:
      Type: AWS::EC2::VPCEndpoint
      Properties:
        VpcId: !Ref EC2VPC
        VpcEndpointType: Gateway
        ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
        RouteTableIds:
          - !Ref RouteTable
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal: '*'
              Action:
                - 's3:*'
              Resource:
                - !Sub 'arn:aws:s3:::${S3Bucket}/*'
                - !Sub 'arn:aws:s3:::${S3Bucket}'
                - !GetAtt FinanceAccessPoint.Arn
                - !Join  [ '', [ !GetAtt FinanceAccessPoint.Arn, '/object/*' ] ]
                - !GetAtt AnalyticsAccessPoint.Arn
                - !Join  [ '', [ !GetAtt AnalyticsAccessPoint.Arn, '/object/*' ] ]

    EC2InterfaceEndpoint:
      Type: AWS::EC2::VPCEndpoint
      Properties:
        VpcId: !Ref EC2VPC
        VpcEndpointType: Interface
        ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ec2'
        PrivateDnsEnabled: true
        SubnetIds:
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref AllowHTTPSSecurityGroup

    AllowSHHSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: SG for SSH access
        VpcId: !Ref EC2VPC
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            FromPort: 22
            ToPort: 22
            IpProtocol: tcp

    AllowHTTPSSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: SG for HTTPS access
        VpcId: !Ref EC2VPC
        SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            FromPort: 443
            ToPort: 443
            IpProtocol: tcp

    # --------------------------------------
    # ----------EC2 Configuration-----------
    # --------------------------------------
    EC2KeyPair:
      Type: AWS::EC2::KeyPair
      Properties:
        KeyName: EC2KeyPair

    EC2Instance:
      Type: AWS::EC2::Instance
      Properties:
        ImageId: ami-051f8a213df8bc089
        KeyName: !Ref EC2KeyPair
        InstanceType: t2.micro
        UserData: !Base64 ${file(ec2-user-data.sh)}
        IamInstanceProfile: !Ref InstanceProfile
        SubnetId: !Ref PrivateSubnet
        SecurityGroupIds:
          - !Ref AllowSHHSecurityGroup
          - !Ref AllowHTTPSSecurityGroup # Allows S3 connections
        Tags:
          - Key: Name
            Value: EC2 Instance
          - Key: FINANCEAP
            Value: !GetAtt FinanceAccessPoint.Alias
          - Key: ANALYTICSAP
            Value: !GetAtt AnalyticsAccessPoint.Alias

    InstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        InstanceProfileName: ec2-instance-profile
        Roles:
          - !Ref EC2InstanceRole

    EC2InstanceRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: basic-instance-role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action:
                - sts:AssumeRole

    ReadonlyEC2DescribePolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: ReadonlyTagsPolicy
        Roles:
          - !Ref EC2InstanceRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ec2:Describe*
              Resource:
                - '*'

    EC2InstanceConnectEndpoint:
      Type: AWS::EC2::InstanceConnectEndpoint
      Properties:
        ClientToken: 'EC2-S3-ACCESS-POINT'
        PreserveClientIp: true
        SubnetId: !Ref PrivateSubnet

    # --------------------------------------
    # -----------S3 Configuration-----------
    # --------------------------------------

    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: 's3-access-point-bucket-b'
      DeletionPolicy: Delete
      UpdateReplacePolicy: Retain

    MainS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: DelegateControlToAccessPoint
              Action:
                - 's3:*'
              Effect: Allow
              Resource:
                - !Sub 'arn:aws:s3:::${S3Bucket}/*'
                - !Sub 'arn:aws:s3:::${S3Bucket}'
              Principal:
                AWS: '*'
              Condition:
                StringEquals:
                  's3:DataAccessPointArn':
                    - !GetAtt FinanceAccessPoint.Arn
                    - !GetAtt AnalyticsAccessPoint.Arn

    FinanceAccessPoint:
      Type: AWS::S3::AccessPoint
      Properties:
        Bucket: !Ref S3Bucket
        Name: finance-access-point
        VpcConfiguration:
          VpcId:
            Ref: EC2VPC
        Policy:
          Version: '2012-10-17'
          Statement:
            - Action:
                - 's3:GetObject'
                - 's3:PutObject'
                - 's3:ListBucket'
                - 's3:DeleteObject'
              Effect: Allow
              Resource:
                - !Sub 'arn:${AWS::Partition}:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/finance-access-point/object/finance/*'
                - !Sub 'arn:${AWS::Partition}:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/finance-access-point'
              Principal: '*'

    AnalyticsAccessPoint:
      Type: AWS::S3::AccessPoint
      Properties:
        Bucket: !Ref S3Bucket
        Name: analytics-access-point
        VpcConfiguration:
          VpcId:
            Ref: EC2VPC
        Policy:
          Version: '2012-10-17'
          Statement:
            - Action:
                - 's3:GetObject'
                - 's3:ListBucket'
              Effect: Allow
              Resource:
                - !Sub 'arn:${AWS::Partition}:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/analytics-access-point/object/finance/*'
                - !Sub 'arn:${AWS::Partition}:s3:${AWS::Region}:${AWS::AccountId}:accesspoint/analytics-access-point'
              Principal: '*'
